{"version":3,"sources":["js/gauge.js"],"names":["AnimatedText","BaseDonut","BaseGauge","Donut","Gauge","GaugePointer","TextRenderer","ValueUpdater","addCommas","cutHex","formatNumber","mergeObjects","secondsToString","slice","hasProp","hasOwnProperty","extend","child","parent","key","call","ctor","constructor","prototype","__super__","indexOf","item","i","l","length","browserRequestAnimationFrame","isCancelled","j","lastId","len","vendor","vendors","window","requestAnimationFrame","cancelAnimationFrame","callback","element","myId","id","currTime","lastTime","timeToCall","Date","getTime","Math","max","setTimeout","clearTimeout","sec","hr","min","floor","digits","num","value","arguments","toFixed","obj1","obj2","out","val","nStr","rgx","x","x1","x2","split","test","replace","charAt","substring","addToAnimationQueue","clear","AnimationUpdater","add","animationSpeed","update","force","diff","displayedValue","ctx","clearRect","canvas","width","height","abs","render","superClass","apply","displayScale","forceUpdate","setTextField","textField","fractionDigits","setMinValue","minValue","updateStartValue","gauge","ref","results","gp","push","setOptions","options","el","style","fontSize","angle","configDisplayScale","backingStorePixelRatio","devicePixelRatio","prevDisplayScale","highDpiSupport","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","G__width","G__height","parseValue","isFinite","parseFloat","Number","fractionDigits1","innerHTML","elem1","text","elem","Error","setVal","textVal","gauge1","strokeWidth","color","iconPath","iconScale","iconAngle","img","radius","radiusScale","maxValue","Image","src","endX","endY","imgX","imgY","startX","startY","y","getAngle","round","cos","sin","PI","beginPath","fillStyle","arc","fill","moveTo","lineTo","save","translate","rotate","drawImage","restore","Bar","updateValues","arrValues","avgValue","avgPercent","valPercent","$","css","h","w","percentColors","G_vmlCanvasManager","initElement","getContext","clientHeight","clientWidth","displayedAngle","lineWidth","paddingTop","paddingBottom","colorStart","colorStop","gradientType","strokeColor","pointer","limitMax","limitMin","phi","configPercentColors","extraPadding","availableHeight","bval","gval","rval","Array","parseInt","pct","r","g","b","set","m","ref1","run","getColorForPercentage","grad","endColor","rangePct","startColor","join","getColorForValue","renderStaticLabels","staticLabels","font","fontsize","match","re","rest","rotationAngle","textBaseline","textAlign","labels","label","fillText","renderTicks","ticksOptions","currentDivision","currentSubDivision","divColor","divLength","divWidth","divisionCount","range","rangeDivisions","scaleMutate","subColor","subDivisions","subLength","subWidth","subdivisionCount","t","tmpRadius","divisions","strokeStyle","stroke","results1","st","len1","zone","lineCap","staticZones","offset","customFillStyle","generateGradient","createRadialGradient","createLinearGradient","addColorStop","shadowColor","grdFill","strokeGradient","start","stop","grd","_orgStrokeColor","elements","animId","addAll","list","object","finished","k","toRemove","isCallback","splice","define","amd","module","exports"],"mappings":"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","file":"gauge.1e4f61e7.js","sourceRoot":"..","sourcesContent":["// Generated by CoffeeScript 1.11.1\r\n(function() {\r\n  var AnimatedText, AnimatedTextFactory, Bar, BaseDonut, BaseGauge, Donut, Gauge, GaugePointer, TextRenderer, ValueUpdater, addCommas, cutHex, formatNumber, mergeObjects, secondsToString,\r\n    slice = [].slice,\r\n    hasProp = {}.hasOwnProperty,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\r\n\r\n  (function() {\r\n    var browserRequestAnimationFrame, isCancelled, j, lastId, len, vendor, vendors;\r\n    vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for (j = 0, len = vendors.length; j < len; j++) {\r\n      vendor = vendors[j];\r\n      if (window.requestAnimationFrame) {\r\n        break;\r\n      }\r\n      window.requestAnimationFrame = window[vendor + 'RequestAnimationFrame'];\r\n      window.cancelAnimationFrame = window[vendor + 'CancelAnimationFrame'] || window[vendor + 'CancelRequestAnimationFrame'];\r\n    }\r\n    browserRequestAnimationFrame = null;\r\n    lastId = 0;\r\n    isCancelled = {};\r\n    if (!requestAnimationFrame) {\r\n      window.requestAnimationFrame = function(callback, element) {\r\n        var currTime, id, lastTime, timeToCall;\r\n        currTime = new Date().getTime();\r\n        timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        id = window.setTimeout(function() {\r\n          return callback(currTime + timeToCall);\r\n        }, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n      };\r\n      return window.cancelAnimationFrame = function(id) {\r\n        return clearTimeout(id);\r\n      };\r\n    } else if (!window.cancelAnimationFrame) {\r\n      browserRequestAnimationFrame = window.requestAnimationFrame;\r\n      window.requestAnimationFrame = function(callback, element) {\r\n        var myId;\r\n        myId = ++lastId;\r\n        browserRequestAnimationFrame(function() {\r\n          if (!isCancelled[myId]) {\r\n            return callback();\r\n          }\r\n        }, element);\r\n        return myId;\r\n      };\r\n      return window.cancelAnimationFrame = function(id) {\r\n        return isCancelled[id] = true;\r\n      };\r\n    }\r\n  })();\r\n\r\n  secondsToString = function(sec) {\r\n    var hr, min;\r\n    hr = Math.floor(sec / 3600);\r\n    min = Math.floor((sec - (hr * 3600)) / 60);\r\n    sec -= (hr * 3600) + (min * 60);\r\n    sec += '';\r\n    min += '';\r\n    while (min.length < 2) {\r\n      min = '0' + min;\r\n    }\r\n    while (sec.length < 2) {\r\n      sec = '0' + sec;\r\n    }\r\n    hr = hr ? hr + ':' : '';\r\n    return hr + min + ':' + sec;\r\n  };\r\n\r\n  formatNumber = function() {\r\n    var digits, num, value;\r\n    num = 1 <= arguments.length ? slice.call(arguments, 0) : [];\r\n    value = num[0];\r\n    digits = 0 || num[1];\r\n    return addCommas(value.toFixed(digits));\r\n  };\r\n\r\n  mergeObjects = function(obj1, obj2) {\r\n    var key, out, val;\r\n    out = {};\r\n    for (key in obj1) {\r\n      if (!hasProp.call(obj1, key)) continue;\r\n      val = obj1[key];\r\n      out[key] = val;\r\n    }\r\n    for (key in obj2) {\r\n      if (!hasProp.call(obj2, key)) continue;\r\n      val = obj2[key];\r\n      out[key] = val;\r\n    }\r\n    return out;\r\n  };\r\n\r\n  addCommas = function(nStr) {\r\n    var rgx, x, x1, x2;\r\n    nStr += '';\r\n    x = nStr.split('.');\r\n    x1 = x[0];\r\n    x2 = '';\r\n    if (x.length > 1) {\r\n      x2 = '.' + x[1];\r\n    }\r\n    rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1)) {\r\n      x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n    }\r\n    return x1 + x2;\r\n  };\r\n\r\n  cutHex = function(nStr) {\r\n    if (nStr.charAt(0) === \"#\") {\r\n      return nStr.substring(1, 7);\r\n    }\r\n    return nStr;\r\n  };\r\n\r\n  ValueUpdater = (function() {\r\n    ValueUpdater.prototype.animationSpeed = 32;\r\n\r\n    function ValueUpdater(addToAnimationQueue, clear) {\r\n      if (addToAnimationQueue == null) {\r\n        addToAnimationQueue = true;\r\n      }\r\n      this.clear = clear != null ? clear : true;\r\n      if (addToAnimationQueue) {\r\n        AnimationUpdater.add(this);\r\n      }\r\n    }\r\n\r\n    ValueUpdater.prototype.update = function(force) {\r\n      var diff;\r\n      if (force == null) {\r\n        force = false;\r\n      }\r\n      if (force || this.displayedValue !== this.value) {\r\n        if (this.ctx && this.clear) {\r\n          this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n        diff = this.value - this.displayedValue;\r\n        if (Math.abs(diff / this.animationSpeed) <= 0.001) {\r\n          this.displayedValue = this.value;\r\n        } else {\r\n          this.displayedValue = this.displayedValue + diff / this.animationSpeed;\r\n        }\r\n        this.render();\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    return ValueUpdater;\r\n\r\n  })();\r\n\r\n  BaseGauge = (function(superClass) {\r\n    extend(BaseGauge, superClass);\r\n\r\n    function BaseGauge() {\r\n      return BaseGauge.__super__.constructor.apply(this, arguments);\r\n    }\r\n\r\n    BaseGauge.prototype.displayScale = 1;\r\n\r\n    BaseGauge.prototype.forceUpdate = true;\r\n\r\n    BaseGauge.prototype.setTextField = function(textField, fractionDigits) {\r\n      return this.textField = textField instanceof TextRenderer ? textField : new TextRenderer(textField, fractionDigits);\r\n    };\r\n\r\n    BaseGauge.prototype.setMinValue = function(minValue, updateStartValue) {\r\n      var gauge, j, len, ref, results;\r\n      this.minValue = minValue;\r\n      if (updateStartValue == null) {\r\n        updateStartValue = true;\r\n      }\r\n      if (updateStartValue) {\r\n        this.displayedValue = this.minValue;\r\n        ref = this.gp || [];\r\n        results = [];\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          gauge = ref[j];\r\n          results.push(gauge.displayedValue = this.minValue);\r\n        }\r\n        return results;\r\n      }\r\n    };\r\n\r\n    BaseGauge.prototype.setOptions = function(options) {\r\n      if (options == null) {\r\n        options = null;\r\n      }\r\n      this.options = mergeObjects(this.options, options);\r\n      if (this.textField) {\r\n        this.textField.el.style.fontSize = options.fontSize + 'px';\r\n      }\r\n      if (this.options.angle > .5) {\r\n        this.options.angle = .5;\r\n      }\r\n      this.configDisplayScale();\r\n      return this;\r\n    };\r\n\r\n    BaseGauge.prototype.configDisplayScale = function() {\r\n      var backingStorePixelRatio, devicePixelRatio, height, prevDisplayScale, width;\r\n      prevDisplayScale = this.displayScale;\r\n      if (this.options.highDpiSupport === false) {\r\n        delete this.displayScale;\r\n      } else {\r\n        devicePixelRatio = window.devicePixelRatio || 1;\r\n        backingStorePixelRatio = this.ctx.webkitBackingStorePixelRatio || this.ctx.mozBackingStorePixelRatio || this.ctx.msBackingStorePixelRatio || this.ctx.oBackingStorePixelRatio || this.ctx.backingStorePixelRatio || 1;\r\n        this.displayScale = devicePixelRatio / backingStorePixelRatio;\r\n      }\r\n      if (this.displayScale !== prevDisplayScale) {\r\n        width = this.canvas.G__width || this.canvas.width;\r\n        height = this.canvas.G__height || this.canvas.height;\r\n        this.canvas.width = width * this.displayScale;\r\n        this.canvas.height = height * this.displayScale;\r\n        this.canvas.style.width = width + \"px\";\r\n        this.canvas.style.height = height + \"px\";\r\n        this.canvas.G__width = width;\r\n        this.canvas.G__height = height;\r\n      }\r\n      return this;\r\n    };\r\n\r\n    BaseGauge.prototype.parseValue = function(value) {\r\n      value = parseFloat(value) || Number(value);\r\n      if (isFinite(value)) {\r\n        return value;\r\n      } else {\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    return BaseGauge;\r\n\r\n  })(ValueUpdater);\r\n\r\n  TextRenderer = (function() {\r\n    function TextRenderer(el, fractionDigits1) {\r\n      this.el = el;\r\n      this.fractionDigits = fractionDigits1;\r\n    }\r\n\r\n    TextRenderer.prototype.render = function(gauge) {\r\n      return this.el.innerHTML = formatNumber(gauge.displayedValue, this.fractionDigits);\r\n    };\r\n\r\n    return TextRenderer;\r\n\r\n  })();\r\n\r\n  AnimatedText = (function(superClass) {\r\n    extend(AnimatedText, superClass);\r\n\r\n    AnimatedText.prototype.displayedValue = 0;\r\n\r\n    AnimatedText.prototype.value = 0;\r\n\r\n    AnimatedText.prototype.setVal = function(value) {\r\n      return this.value = 1 * value;\r\n    };\r\n\r\n    function AnimatedText(elem1, text) {\r\n      this.elem = elem1;\r\n      this.text = text != null ? text : false;\r\n      AnimatedText.__super__.constructor.call(this);\r\n      if (this.elem === void 0) {\r\n        throw new Error('The element isn\\'t defined.');\r\n      }\r\n      this.value = 1 * this.elem.innerHTML;\r\n      if (this.text) {\r\n        this.value = 0;\r\n      }\r\n    }\r\n\r\n    AnimatedText.prototype.render = function() {\r\n      var textVal;\r\n      if (this.text) {\r\n        textVal = secondsToString(this.displayedValue.toFixed(0));\r\n      } else {\r\n        textVal = addCommas(formatNumber(this.displayedValue));\r\n      }\r\n      return this.elem.innerHTML = textVal;\r\n    };\r\n\r\n    return AnimatedText;\r\n\r\n  })(ValueUpdater);\r\n\r\n  AnimatedTextFactory = {\r\n    create: function(objList) {\r\n      var elem, j, len, out;\r\n      out = [];\r\n      for (j = 0, len = objList.length; j < len; j++) {\r\n        elem = objList[j];\r\n        out.push(new AnimatedText(elem));\r\n      }\r\n      return out;\r\n    }\r\n  };\r\n\r\n  GaugePointer = (function(superClass) {\r\n    extend(GaugePointer, superClass);\r\n\r\n    GaugePointer.prototype.displayedValue = 0;\r\n\r\n    GaugePointer.prototype.value = 0;\r\n\r\n    GaugePointer.prototype.options = {\r\n      strokeWidth: 0.035,\r\n      length: 0.1,\r\n      color: \"#000000\",\r\n      iconPath: null,\r\n      iconScale: 1.0,\r\n      iconAngle: 0\r\n    };\r\n\r\n    GaugePointer.prototype.img = null;\r\n\r\n    function GaugePointer(gauge1) {\r\n      this.gauge = gauge1;\r\n      if (this.gauge === void 0) {\r\n        throw new Error('The element isn\\'t defined.');\r\n      }\r\n      this.ctx = this.gauge.ctx;\r\n      this.canvas = this.gauge.canvas;\r\n      GaugePointer.__super__.constructor.call(this, false, false);\r\n      this.setOptions();\r\n    }\r\n\r\n    GaugePointer.prototype.setOptions = function(options) {\r\n      if (options == null) {\r\n        options = null;\r\n      }\r\n      this.options = mergeObjects(this.options, options);\r\n      this.length = 2 * this.gauge.radius * this.gauge.options.radiusScale * this.options.length;\r\n      this.strokeWidth = this.canvas.height * this.options.strokeWidth;\r\n      this.maxValue = this.gauge.maxValue;\r\n      this.minValue = this.gauge.minValue;\r\n      this.animationSpeed = this.gauge.animationSpeed;\r\n      this.options.angle = this.gauge.options.angle;\r\n      if (this.options.iconPath) {\r\n        this.img = new Image();\r\n        return this.img.src = this.options.iconPath;\r\n      }\r\n    };\r\n\r\n    GaugePointer.prototype.render = function() {\r\n      var angle, endX, endY, imgX, imgY, startX, startY, x, y;\r\n      angle = this.gauge.getAngle.call(this, this.displayedValue);\r\n      x = Math.round(this.length * Math.cos(angle));\r\n      y = Math.round(this.length * Math.sin(angle));\r\n      startX = Math.round(this.strokeWidth * Math.cos(angle - Math.PI / 2));\r\n      startY = Math.round(this.strokeWidth * Math.sin(angle - Math.PI / 2));\r\n      endX = Math.round(this.strokeWidth * Math.cos(angle + Math.PI / 2));\r\n      endY = Math.round(this.strokeWidth * Math.sin(angle + Math.PI / 2));\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = this.options.color;\r\n      this.ctx.arc(0, 0, this.strokeWidth, 0, Math.PI * 2, false);\r\n      this.ctx.fill();\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(startX, startY);\r\n      this.ctx.lineTo(x, y);\r\n      this.ctx.lineTo(endX, endY);\r\n      this.ctx.fill();\r\n      if (this.img) {\r\n        imgX = Math.round(this.img.width * this.options.iconScale);\r\n        imgY = Math.round(this.img.height * this.options.iconScale);\r\n        this.ctx.save();\r\n        this.ctx.translate(x, y);\r\n        this.ctx.rotate(angle + Math.PI / 180.0 * (90 + this.options.iconAngle));\r\n        this.ctx.drawImage(this.img, -imgX / 2, -imgY / 2, imgX, imgY);\r\n        return this.ctx.restore();\r\n      }\r\n    };\r\n\r\n    return GaugePointer;\r\n\r\n  })(ValueUpdater);\r\n\r\n  Bar = (function() {\r\n    function Bar(elem1) {\r\n      this.elem = elem1;\r\n    }\r\n\r\n    Bar.prototype.updateValues = function(arrValues) {\r\n      this.value = arrValues[0];\r\n      this.maxValue = arrValues[1];\r\n      this.avgValue = arrValues[2];\r\n      return this.render();\r\n    };\r\n\r\n    Bar.prototype.render = function() {\r\n      var avgPercent, valPercent;\r\n      if (this.textField) {\r\n        this.textField.text(formatNumber(this.value));\r\n      }\r\n      if (this.maxValue === 0) {\r\n        this.maxValue = this.avgValue * 2;\r\n      }\r\n      valPercent = (this.value / this.maxValue) * 100;\r\n      avgPercent = (this.avgValue / this.maxValue) * 100;\r\n      $(\".bar-value\", this.elem).css({\r\n        \"width\": valPercent + \"%\"\r\n      });\r\n      return $(\".typical-value\", this.elem).css({\r\n        \"width\": avgPercent + \"%\"\r\n      });\r\n    };\r\n\r\n    return Bar;\r\n\r\n  })();\r\n\r\n  Gauge = (function(superClass) {\r\n    extend(Gauge, superClass);\r\n\r\n    Gauge.prototype.elem = null;\r\n\r\n    Gauge.prototype.value = [20];\r\n\r\n    Gauge.prototype.maxValue = 80;\r\n\r\n    Gauge.prototype.minValue = 0;\r\n\r\n    Gauge.prototype.displayedAngle = 0;\r\n\r\n    Gauge.prototype.displayedValue = 0;\r\n\r\n    Gauge.prototype.lineWidth = 40;\r\n\r\n    Gauge.prototype.paddingTop = 0.1;\r\n\r\n    Gauge.prototype.paddingBottom = 0.1;\r\n\r\n    Gauge.prototype.percentColors = null;\r\n\r\n    Gauge.prototype.options = {\r\n      colorStart: \"#6fadcf\",\r\n      colorStop: void 0,\r\n      gradientType: 0,\r\n      strokeColor: \"#e0e0e0\",\r\n      pointer: {\r\n        length: 0.8,\r\n        strokeWidth: 0.035,\r\n        iconScale: 1.0\r\n      },\r\n      angle: 0.15,\r\n      lineWidth: 0.44,\r\n      radiusScale: 1.0,\r\n      fontSize: 40,\r\n      limitMax: false,\r\n      limitMin: false\r\n    };\r\n\r\n    function Gauge(canvas) {\r\n      var h, w;\r\n      this.canvas = canvas;\r\n      Gauge.__super__.constructor.call(this);\r\n      this.percentColors = null;\r\n      if (typeof G_vmlCanvasManager !== 'undefined') {\r\n        this.canvas = window.G_vmlCanvasManager.initElement(this.canvas);\r\n      }\r\n      this.ctx = this.canvas.getContext('2d');\r\n      h = this.canvas.clientHeight;\r\n      w = this.canvas.clientWidth;\r\n      this.canvas.height = h;\r\n      this.canvas.width = w;\r\n      this.gp = [new GaugePointer(this)];\r\n      this.setOptions();\r\n    }\r\n\r\n    Gauge.prototype.setOptions = function(options) {\r\n      var gauge, j, len, phi, ref;\r\n      if (options == null) {\r\n        options = null;\r\n      }\r\n      Gauge.__super__.setOptions.call(this, options);\r\n      this.configPercentColors();\r\n      this.extraPadding = 0;\r\n      if (this.options.angle < 0) {\r\n        phi = Math.PI * (1 + this.options.angle);\r\n        this.extraPadding = Math.sin(phi);\r\n      }\r\n      this.availableHeight = this.canvas.height * (1 - this.paddingTop - this.paddingBottom);\r\n      this.lineWidth = this.availableHeight * this.options.lineWidth;\r\n      this.radius = (this.availableHeight - this.lineWidth / 2) / (1.0 + this.extraPadding);\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      ref = this.gp;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        gauge = ref[j];\r\n        gauge.setOptions(this.options.pointer);\r\n        gauge.render();\r\n      }\r\n      this.render();\r\n      return this;\r\n    };\r\n\r\n    Gauge.prototype.configPercentColors = function() {\r\n      var bval, gval, i, j, ref, results, rval;\r\n      this.percentColors = null;\r\n      if (this.options.percentColors !== void 0) {\r\n        this.percentColors = new Array();\r\n        results = [];\r\n        for (i = j = 0, ref = this.options.percentColors.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\r\n          rval = parseInt((cutHex(this.options.percentColors[i][1])).substring(0, 2), 16);\r\n          gval = parseInt((cutHex(this.options.percentColors[i][1])).substring(2, 4), 16);\r\n          bval = parseInt((cutHex(this.options.percentColors[i][1])).substring(4, 6), 16);\r\n          results.push(this.percentColors[i] = {\r\n            pct: this.options.percentColors[i][0],\r\n            color: {\r\n              r: rval,\r\n              g: gval,\r\n              b: bval\r\n            }\r\n          });\r\n        }\r\n        return results;\r\n      }\r\n    };\r\n\r\n    Gauge.prototype.set = function(value) {\r\n      var gp, i, j, l, len, m, ref, ref1, val;\r\n      if (!(value instanceof Array)) {\r\n        value = [value];\r\n      }\r\n      for (i = j = 0, ref = value.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\r\n        value[i] = this.parseValue(value[i]);\r\n      }\r\n      if (value.length > this.gp.length) {\r\n        for (i = l = 0, ref1 = value.length - this.gp.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\r\n          gp = new GaugePointer(this);\r\n          gp.setOptions(this.options.pointer);\r\n          this.gp.push(gp);\r\n        }\r\n      } else if (value.length < this.gp.length) {\r\n        this.gp = this.gp.slice(this.gp.length - value.length);\r\n      }\r\n      i = 0;\r\n      for (m = 0, len = value.length; m < len; m++) {\r\n        val = value[m];\r\n        if (val > this.maxValue) {\r\n          if (this.options.limitMax) {\r\n            val = this.maxValue;\r\n          } else {\r\n            this.maxValue = val + 1;\r\n          }\r\n        } else if (val < this.minValue) {\r\n          if (this.options.limitMin) {\r\n            val = this.minValue;\r\n          } else {\r\n            this.minValue = val - 1;\r\n          }\r\n        }\r\n        this.gp[i].value = val;\r\n        this.gp[i++].setOptions({\r\n          minValue: this.minValue,\r\n          maxValue: this.maxValue,\r\n          angle: this.options.angle\r\n        });\r\n      }\r\n      this.value = Math.max(Math.min(value[value.length - 1], this.maxValue), this.minValue);\r\n      AnimationUpdater.add(this);\r\n      AnimationUpdater.run(this.forceUpdate);\r\n      return this.forceUpdate = false;\r\n    };\r\n\r\n    Gauge.prototype.getAngle = function(value) {\r\n      return (1 + this.options.angle) * Math.PI + ((value - this.minValue) / (this.maxValue - this.minValue)) * (1 - this.options.angle * 2) * Math.PI;\r\n    };\r\n\r\n    Gauge.prototype.getColorForPercentage = function(pct, grad) {\r\n      var color, endColor, i, j, rangePct, ref, startColor;\r\n      if (pct === 0) {\r\n        color = this.percentColors[0].color;\r\n      } else {\r\n        color = this.percentColors[this.percentColors.length - 1].color;\r\n        for (i = j = 0, ref = this.percentColors.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\r\n          if (pct <= this.percentColors[i].pct) {\r\n            if (grad === true) {\r\n              startColor = this.percentColors[i - 1] || this.percentColors[0];\r\n              endColor = this.percentColors[i];\r\n              rangePct = (pct - startColor.pct) / (endColor.pct - startColor.pct);\r\n              color = {\r\n                r: Math.floor(startColor.color.r * (1 - rangePct) + endColor.color.r * rangePct),\r\n                g: Math.floor(startColor.color.g * (1 - rangePct) + endColor.color.g * rangePct),\r\n                b: Math.floor(startColor.color.b * (1 - rangePct) + endColor.color.b * rangePct)\r\n              };\r\n            } else {\r\n              color = this.percentColors[i].color;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\r\n    };\r\n\r\n    Gauge.prototype.getColorForValue = function(val, grad) {\r\n      var pct;\r\n      pct = (val - this.minValue) / (this.maxValue - this.minValue);\r\n      return this.getColorForPercentage(pct, grad);\r\n    };\r\n\r\n    Gauge.prototype.renderStaticLabels = function(staticLabels, w, h, radius) {\r\n      var font, fontsize, j, len, match, re, ref, rest, rotationAngle, value;\r\n      this.ctx.save();\r\n      this.ctx.translate(w, h);\r\n      font = staticLabels.font || \"10px Times\";\r\n      re = /\\d+\\.?\\d?/;\r\n      match = font.match(re)[0];\r\n      rest = font.slice(match.length);\r\n      fontsize = parseFloat(match) * this.displayScale;\r\n      this.ctx.font = fontsize + rest;\r\n      this.ctx.fillStyle = staticLabels.color || \"#000000\";\r\n      this.ctx.textBaseline = \"bottom\";\r\n      this.ctx.textAlign = \"center\";\r\n      ref = staticLabels.labels;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        value = ref[j];\r\n        if (value.label !== void 0) {\r\n          if ((!this.options.limitMin || value >= this.minValue) && (!this.options.limitMax || value <= this.maxValue)) {\r\n            font = value.font || staticLabels.font;\r\n            match = font.match(re)[0];\r\n            rest = font.slice(match.length);\r\n            fontsize = parseFloat(match) * this.displayScale;\r\n            this.ctx.font = fontsize + rest;\r\n            rotationAngle = this.getAngle(value.label) - 3 * Math.PI / 2;\r\n            this.ctx.rotate(rotationAngle);\r\n            this.ctx.fillText(formatNumber(value.label, staticLabels.fractionDigits), 0, -radius - this.lineWidth / 2);\r\n            this.ctx.rotate(-rotationAngle);\r\n          }\r\n        } else {\r\n          if ((!this.options.limitMin || value >= this.minValue) && (!this.options.limitMax || value <= this.maxValue)) {\r\n            rotationAngle = this.getAngle(value) - 3 * Math.PI / 2;\r\n            this.ctx.rotate(rotationAngle);\r\n            this.ctx.fillText(formatNumber(value, staticLabels.fractionDigits), 0, -radius - this.lineWidth / 2);\r\n            this.ctx.rotate(-rotationAngle);\r\n          }\r\n        }\r\n      }\r\n      return this.ctx.restore();\r\n    };\r\n\r\n    Gauge.prototype.renderTicks = function(ticksOptions, w, h, radius) {\r\n      var currentDivision, currentSubDivision, divColor, divLength, divWidth, divisionCount, j, lineWidth, range, rangeDivisions, ref, results, scaleMutate, st, subColor, subDivisions, subLength, subWidth, subdivisionCount, t, tmpRadius;\r\n      if (ticksOptions !== {}) {\r\n        divisionCount = ticksOptions.divisions || 0;\r\n        subdivisionCount = ticksOptions.subDivisions || 0;\r\n        divColor = ticksOptions.divColor || '#fff';\r\n        subColor = ticksOptions.subColor || '#fff';\r\n        divLength = ticksOptions.divLength || 0.7;\r\n        subLength = ticksOptions.subLength || 0.2;\r\n        range = parseFloat(this.maxValue) - parseFloat(this.minValue);\r\n        rangeDivisions = parseFloat(range) / parseFloat(ticksOptions.divisions);\r\n        subDivisions = parseFloat(rangeDivisions) / parseFloat(ticksOptions.subDivisions);\r\n        currentDivision = parseFloat(this.minValue);\r\n        currentSubDivision = 0.0 + subDivisions;\r\n        lineWidth = range / 400;\r\n        divWidth = lineWidth * (ticksOptions.divWidth || 1);\r\n        subWidth = lineWidth * (ticksOptions.subWidth || 1);\r\n        results = [];\r\n        for (t = j = 0, ref = divisionCount + 1; j < ref; t = j += 1) {\r\n          this.ctx.lineWidth = this.lineWidth * divLength;\r\n          scaleMutate = (this.lineWidth / 2) * (1 - divLength);\r\n          tmpRadius = (this.radius * this.options.radiusScale) + scaleMutate;\r\n          this.ctx.strokeStyle = divColor;\r\n          this.ctx.beginPath();\r\n          this.ctx.arc(0, 0, tmpRadius, this.getAngle(currentDivision - divWidth), this.getAngle(currentDivision + divWidth), false);\r\n          this.ctx.stroke();\r\n          currentSubDivision = currentDivision + subDivisions;\r\n          currentDivision += rangeDivisions;\r\n          if (t !== ticksOptions.divisions && subdivisionCount > 0) {\r\n            results.push((function() {\r\n              var l, ref1, results1;\r\n              results1 = [];\r\n              for (st = l = 0, ref1 = subdivisionCount - 1; l < ref1; st = l += 1) {\r\n                this.ctx.lineWidth = this.lineWidth * subLength;\r\n                scaleMutate = (this.lineWidth / 2) * (1 - subLength);\r\n                tmpRadius = (this.radius * this.options.radiusScale) + scaleMutate;\r\n                this.ctx.strokeStyle = subColor;\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(0, 0, tmpRadius, this.getAngle(currentSubDivision - subWidth), this.getAngle(currentSubDivision + subWidth), false);\r\n                this.ctx.stroke();\r\n                results1.push(currentSubDivision += subDivisions);\r\n              }\r\n              return results1;\r\n            }).call(this));\r\n          } else {\r\n            results.push(void 0);\r\n          }\r\n        }\r\n        return results;\r\n      }\r\n    };\r\n\r\n    Gauge.prototype.render = function() {\r\n      var displayedAngle, fillStyle, gauge, h, j, l, len, len1, max, min, radius, ref, ref1, scaleMutate, tmpRadius, w, zone;\r\n      w = this.canvas.width / 2;\r\n      h = (this.canvas.height * this.paddingTop + this.availableHeight) - ((this.radius + this.lineWidth / 2) * this.extraPadding);\r\n      displayedAngle = this.getAngle(this.displayedValue);\r\n      if (this.textField) {\r\n        this.textField.render(this);\r\n      }\r\n      this.ctx.lineCap = \"butt\";\r\n      radius = this.radius * this.options.radiusScale;\r\n      if (this.options.staticLabels) {\r\n        this.renderStaticLabels(this.options.staticLabels, w, h, radius);\r\n      }\r\n      if (this.options.staticZones) {\r\n        this.ctx.save();\r\n        this.ctx.translate(w, h);\r\n        this.ctx.lineWidth = this.lineWidth;\r\n        ref = this.options.staticZones;\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          zone = ref[j];\r\n          min = zone.min;\r\n          if (this.options.limitMin && min < this.minValue) {\r\n            min = this.minValue;\r\n          }\r\n          max = zone.max;\r\n          if (this.options.limitMax && max > this.maxValue) {\r\n            max = this.maxValue;\r\n          }\r\n          tmpRadius = this.radius * this.options.radiusScale;\r\n          if (zone.height) {\r\n            this.ctx.lineWidth = this.lineWidth * zone.height;\r\n            scaleMutate = (this.lineWidth / 2) * (zone.offset || 1 - zone.height);\r\n            tmpRadius = (this.radius * this.options.radiusScale) + scaleMutate;\r\n          }\r\n          this.ctx.strokeStyle = zone.strokeStyle;\r\n          this.ctx.beginPath();\r\n          this.ctx.arc(0, 0, tmpRadius, this.getAngle(min), this.getAngle(max), false);\r\n          this.ctx.stroke();\r\n        }\r\n      } else {\r\n        if (this.options.customFillStyle !== void 0) {\r\n          fillStyle = this.options.customFillStyle(this);\r\n        } else if (this.percentColors !== null) {\r\n          fillStyle = this.getColorForValue(this.displayedValue, this.options.generateGradient);\r\n        } else if (this.options.colorStop !== void 0) {\r\n          if (this.options.gradientType === 0) {\r\n            fillStyle = this.ctx.createRadialGradient(w, h, 9, w, h, 70);\r\n          } else {\r\n            fillStyle = this.ctx.createLinearGradient(0, 0, w, 0);\r\n          }\r\n          fillStyle.addColorStop(0, this.options.colorStart);\r\n          fillStyle.addColorStop(1, this.options.colorStop);\r\n        } else {\r\n          fillStyle = this.options.colorStart;\r\n        }\r\n        this.ctx.strokeStyle = fillStyle;\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(w, h, radius, (1 + this.options.angle) * Math.PI, displayedAngle, false);\r\n        this.ctx.lineWidth = this.lineWidth;\r\n        this.ctx.stroke();\r\n        this.ctx.strokeStyle = this.options.strokeColor;\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(w, h, radius, displayedAngle, (2 - this.options.angle) * Math.PI, false);\r\n        this.ctx.stroke();\r\n        this.ctx.save();\r\n        this.ctx.translate(w, h);\r\n      }\r\n      if (this.options.renderTicks) {\r\n        this.renderTicks(this.options.renderTicks, w, h, radius);\r\n      }\r\n      this.ctx.restore();\r\n      this.ctx.translate(w, h);\r\n      ref1 = this.gp;\r\n      for (l = 0, len1 = ref1.length; l < len1; l++) {\r\n        gauge = ref1[l];\r\n        gauge.update(true);\r\n      }\r\n      return this.ctx.translate(-w, -h);\r\n    };\r\n\r\n    return Gauge;\r\n\r\n  })(BaseGauge);\r\n\r\n  BaseDonut = (function(superClass) {\r\n    extend(BaseDonut, superClass);\r\n\r\n    BaseDonut.prototype.lineWidth = 15;\r\n\r\n    BaseDonut.prototype.displayedValue = 0;\r\n\r\n    BaseDonut.prototype.value = 33;\r\n\r\n    BaseDonut.prototype.maxValue = 80;\r\n\r\n    BaseDonut.prototype.minValue = 0;\r\n\r\n    BaseDonut.prototype.options = {\r\n      lineWidth: 0.10,\r\n      colorStart: \"#6f6ea0\",\r\n      colorStop: \"#c0c0db\",\r\n      strokeColor: \"#eeeeee\",\r\n      shadowColor: \"#d5d5d5\",\r\n      angle: 0.35,\r\n      radiusScale: 1.0\r\n    };\r\n\r\n    function BaseDonut(canvas) {\r\n      this.canvas = canvas;\r\n      BaseDonut.__super__.constructor.call(this);\r\n      if (typeof G_vmlCanvasManager !== 'undefined') {\r\n        this.canvas = window.G_vmlCanvasManager.initElement(this.canvas);\r\n      }\r\n      this.ctx = this.canvas.getContext('2d');\r\n      this.setOptions();\r\n      this.render();\r\n    }\r\n\r\n    BaseDonut.prototype.getAngle = function(value) {\r\n      return (1 - this.options.angle) * Math.PI + ((value - this.minValue) / (this.maxValue - this.minValue)) * ((2 + this.options.angle) - (1 - this.options.angle)) * Math.PI;\r\n    };\r\n\r\n    BaseDonut.prototype.setOptions = function(options) {\r\n      if (options == null) {\r\n        options = null;\r\n      }\r\n      BaseDonut.__super__.setOptions.call(this, options);\r\n      this.lineWidth = this.canvas.height * this.options.lineWidth;\r\n      this.radius = this.options.radiusScale * (this.canvas.height / 2 - this.lineWidth / 2);\r\n      return this;\r\n    };\r\n\r\n    BaseDonut.prototype.set = function(value) {\r\n      this.value = this.parseValue(value);\r\n      if (this.value > this.maxValue) {\r\n        if (this.options.limitMax) {\r\n          this.value = this.maxValue;\r\n        } else {\r\n          this.maxValue = this.value;\r\n        }\r\n      } else if (this.value < this.minValue) {\r\n        if (this.options.limitMin) {\r\n          this.value = this.minValue;\r\n        } else {\r\n          this.minValue = this.value;\r\n        }\r\n      }\r\n      AnimationUpdater.add(this);\r\n      AnimationUpdater.run(this.forceUpdate);\r\n      return this.forceUpdate = false;\r\n    };\r\n\r\n    BaseDonut.prototype.render = function() {\r\n      var displayedAngle, grdFill, h, start, stop, w;\r\n      displayedAngle = this.getAngle(this.displayedValue);\r\n      w = this.canvas.width / 2;\r\n      h = this.canvas.height / 2;\r\n      if (this.textField) {\r\n        this.textField.render(this);\r\n      }\r\n      grdFill = this.ctx.createRadialGradient(w, h, 39, w, h, 70);\r\n      grdFill.addColorStop(0, this.options.colorStart);\r\n      grdFill.addColorStop(1, this.options.colorStop);\r\n      start = this.radius - this.lineWidth / 2;\r\n      stop = this.radius + this.lineWidth / 2;\r\n      this.ctx.strokeStyle = this.options.strokeColor;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(w, h, this.radius, (1 - this.options.angle) * Math.PI, (2 + this.options.angle) * Math.PI, false);\r\n      this.ctx.lineWidth = this.lineWidth;\r\n      this.ctx.lineCap = \"round\";\r\n      this.ctx.stroke();\r\n      this.ctx.strokeStyle = grdFill;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(w, h, this.radius, (1 - this.options.angle) * Math.PI, displayedAngle, false);\r\n      return this.ctx.stroke();\r\n    };\r\n\r\n    return BaseDonut;\r\n\r\n  })(BaseGauge);\r\n\r\n  Donut = (function(superClass) {\r\n    extend(Donut, superClass);\r\n\r\n    function Donut() {\r\n      return Donut.__super__.constructor.apply(this, arguments);\r\n    }\r\n\r\n    Donut.prototype.strokeGradient = function(w, h, start, stop) {\r\n      var grd;\r\n      grd = this.ctx.createRadialGradient(w, h, start, w, h, stop);\r\n      grd.addColorStop(0, this.options.shadowColor);\r\n      grd.addColorStop(0.12, this.options._orgStrokeColor);\r\n      grd.addColorStop(0.88, this.options._orgStrokeColor);\r\n      grd.addColorStop(1, this.options.shadowColor);\r\n      return grd;\r\n    };\r\n\r\n    Donut.prototype.setOptions = function(options) {\r\n      var h, start, stop, w;\r\n      if (options == null) {\r\n        options = null;\r\n      }\r\n      Donut.__super__.setOptions.call(this, options);\r\n      w = this.canvas.width / 2;\r\n      h = this.canvas.height / 2;\r\n      start = this.radius - this.lineWidth / 2;\r\n      stop = this.radius + this.lineWidth / 2;\r\n      this.options._orgStrokeColor = this.options.strokeColor;\r\n      this.options.strokeColor = this.strokeGradient(w, h, start, stop);\r\n      return this;\r\n    };\r\n\r\n    return Donut;\r\n\r\n  })(BaseDonut);\r\n\r\n  window.AnimationUpdater = {\r\n    elements: [],\r\n    animId: null,\r\n    addAll: function(list) {\r\n      var elem, j, len, results;\r\n      results = [];\r\n      for (j = 0, len = list.length; j < len; j++) {\r\n        elem = list[j];\r\n        results.push(AnimationUpdater.elements.push(elem));\r\n      }\r\n      return results;\r\n    },\r\n    add: function(object) {\r\n      if (indexOf.call(AnimationUpdater.elements, object) < 0) {\r\n        return AnimationUpdater.elements.push(object);\r\n      }\r\n    },\r\n    run: function(force) {\r\n      var elem, finished, isCallback, j, k, l, len, ref, toRemove;\r\n      if (force == null) {\r\n        force = false;\r\n      }\r\n      isCallback = isFinite(parseFloat(force));\r\n      if (isCallback || force === true) {\r\n        finished = true;\r\n        toRemove = [];\r\n        ref = AnimationUpdater.elements;\r\n        for (k = j = 0, len = ref.length; j < len; k = ++j) {\r\n          elem = ref[k];\r\n          if (elem.update(force === true)) {\r\n            finished = false;\r\n          } else {\r\n            toRemove.push(k);\r\n          }\r\n        }\r\n        for (l = toRemove.length - 1; l >= 0; l += -1) {\r\n          k = toRemove[l];\r\n          AnimationUpdater.elements.splice(k, 1);\r\n        }\r\n        return AnimationUpdater.animId = finished ? null : requestAnimationFrame(AnimationUpdater.run);\r\n      } else if (force === false) {\r\n        if (AnimationUpdater.animId === !null) {\r\n          cancelAnimationFrame(AnimationUpdater.animId);\r\n        }\r\n        return AnimationUpdater.animId = requestAnimationFrame(AnimationUpdater.run);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (typeof window.define === 'function' && (window.define.amd != null)) {\r\n    define(function() {\r\n      return {\r\n        Gauge: Gauge,\r\n        Donut: Donut,\r\n        BaseDonut: BaseDonut,\r\n        TextRenderer: TextRenderer\r\n      };\r\n    });\r\n  } else if (typeof module !== 'undefined' && (module.exports != null)) {\r\n    module.exports = {\r\n      Gauge: Gauge,\r\n      Donut: Donut,\r\n      BaseDonut: BaseDonut,\r\n      TextRenderer: TextRenderer\r\n    };\r\n  } else {\r\n    window.Gauge = Gauge;\r\n    window.Donut = Donut;\r\n    window.BaseDonut = BaseDonut;\r\n    window.TextRenderer = TextRenderer;\r\n  }\r\n\r\n}).call(this);\r\n\r\n\r\n"]}